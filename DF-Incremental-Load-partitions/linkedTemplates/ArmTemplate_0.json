{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "DF-Incremental-Load-partitions"
		},
		"AzureDataLakeStorage2_LinkedService_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage2_LinkedService'"
		},
		"SqlServerLinkedService_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlServerLinkedService'"
		},
		"AzureDataLakeStorage2_LinkedService_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adls2amardeepstorage.dfs.core.windows.net"
		},
		"AzureKeyVaultLinkedService_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://amar-keyvault.vault.azure.net/"
		},
		"AzureKeyVault_LinkedService_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://amar-keyvault.vault.azure.net/"
		},
		"integrationRuntime-ReUse_properties_typeProperties_linkedInfo_resourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/4f2eb37e-c352-4f99-a45c-7c915721c84f/resourcegroups/rg_BigData/providers/Microsoft.DataFactory/factories/DF-OnPremise-BLOB-Incremental/integrationruntimes/integrationRuntime-selftHosted-OnPremises"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage2_LinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage2_LinkedService_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage2_LinkedService_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVaultLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVaultLinkedService_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault_LinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault_LinkedService_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime-ReUse')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"description": "This is re-used from Data Factory called 'DF-OnPremise-BLOB-Incremental'",
				"typeProperties": {
					"linkedInfo": {
						"resourceId": "[parameters('integrationRuntime-ReUse_properties_typeProperties_linkedInfo_resourceId')]",
						"authorizationType": "Rbac"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedTextDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage2_LinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DynamicTableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@formatDateTime(utcnow(),'yyyyMMdd')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('Ingested_Tables/Fact/',dataset().DynamicTableName)",
							"type": "Expression"
						},
						"fileSystem": "adlsgen2-container"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage2_LinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServerLinkedService_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVaultLinkedService",
							"type": "LinkedServiceReference"
						},
						"secretName": "password-amardeeppc-mssql-2016"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime-ReUse",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime-ReUse')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVaultLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServerLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServerLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerDataset_Table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServerLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServerLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_Incremtl_Load_Partitions')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_Fetch_Last_InsertedDate",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT TableName,WatermarkValue from dbo.watermarktable",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Copy_Incremantal_Fact_data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup_Fetch_Last_InsertedDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "select * from [dbo].[FactInternetSales] where OrderDate >='@{activity('Lookup_Fetch_Last_InsertedDate').output.firstRow.WatermarkValue}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SqlServerDataset_Table",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedTextDataset",
								"type": "DatasetReference",
								"parameters": {
									"DynamicTableName": {
										"value": "@activity('Lookup_Fetch_Last_InsertedDate').output.firstRow.TableName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Lookup_NewWatermark",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy_Incremantal_Fact_data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select MAX(OrderDate) as NewWatermarkvalue from [dbo].[FactInternetSales]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "StoredProc_UpdateFlag_Watermark",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Lookup_NewWatermark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_update_watermark]",
							"storedProcedureParameters": {
								"LastModifiedtime": {
									"value": {
										"value": "@activity('Lookup_NewWatermark').output.firstRow.NewWatermarkvalue",
										"type": "Expression"
									},
									"type": "Datetime"
								},
								"TableName": {
									"value": {
										"value": "@activity('Lookup_Fetch_Last_InsertedDate').output.firstRow.TableName",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SqlServerLinkedService",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Web_Send_email_failure",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Lookup_Fetch_Last_InsertedDate",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Email",
								"value": "amardeepkohli1988@gmail.com;princelittle123@gmail.com"
							}
						],
						"typeProperties": {
							"url": "https://prod-19.northeurope.logic.azure.com:443/workflows/3726dcbf645d450583a9a9bda4a587a7/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=CiGYBPTcJ11s9AbOSNAC-CnzS5CVeCqpFSYm40L3BYM",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "{\n   \"DataFactoryName\": \"@{pipeline().DataFactory}\",\n   \"PipelineName\": \"@{pipeline().Pipeline}\",\n   \"Subject\": \"“An error has occured in the @{pipeline().Pipeline}-pipeline”\",\n   \"ErrorMessage\": \"The ADF pipeline has crashed! Please check the logs. @activity('Lookup_Fetch_Last_InsertedDate').Error.Message\",\n   \"EmailTo\": \"amardeepkohli1988@gmail.com;princelittle123@gmail.com\"\n}\n\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Web_Send_Success_Email",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "StoredProc_UpdateFlag_Watermark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-19.northeurope.logic.azure.com:443/workflows/3726dcbf645d450583a9a9bda4a587a7/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=CiGYBPTcJ11s9AbOSNAC-CnzS5CVeCqpFSYm40L3BYM",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "{\n   \"DataFactoryName\": \"@{pipeline().DataFactory}\",\n   \"PipelineName\": \"@{pipeline().Pipeline}\",\n   \"Subject\": \"SUCCESS in the @{pipeline().Pipeline}-pipeline\",\n   \"ErrorMessage\": \"Everything is okey-dokey!\",\n   \"EmailTo\": \"amardeepkohli1988@gmail.com;princelittle123@gmail.com\"\n}",
								"type": "Expression"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerDataset')]",
				"[concat(variables('factoryId'), '/datasets/SqlServerDataset_Table')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedTextDataset')]",
				"[concat(variables('factoryId'), '/linkedServices/SqlServerLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger_Incremental_Load')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeline_Incremtl_Load_Partitions",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 12,
						"startTime": "2020-11-19T18:09:00",
						"timeZone": "Romance Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline_Incremtl_Load_Partitions')]"
			]
		}
	]
}